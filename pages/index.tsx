import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";

const dummyData = [{ id: 1, name: "rishi" }, { id: 2 }, { id: 3 }];

// type params for getGSheetsData
// const params = {
//   spreadsheetId = "1ffqemZ-YOi7AvAw8HbxmMd0vIbsOXLZ7KpAmNQPD2r8";
// }

const requestOptions = {
  method: "GET",
  redirect: "follow",
  key: process.env.KEY,
};

function getGSheetsData(params: type) {
  return fetch(
    `https://sheets.googleapis.com/v4/spreadsheets/${params.spreadsheetId}/values:batchGet?ranges=${params.range}&majorDimension=ROWS&key=${params.apiKey}`
  )
    .then((res) => res.json())
    .then((data) => data.valueRanges[0].values);
}

async function getServerSideProps(params: string) {
  const res = await fetch(
    `https://sheets.googleapis.com/v4/spreadsheets/1ffqemZ-YOi7AvAw8HbxmMd0vIbsOXLZ7KpAmNQPD2r8/values/MP Round!A3:K22?majorDimension=COLUMNS&valueRenderOption=FORMULA`
  );
  const data = await res.json();

  // Pass data to the page via props
  return { props: { data } };
}

const Home: NextPage = () => {
  const [leaderData, setLeaderData] = useState(null);
  const [isLoading, setLoading] = useState(false);

  useEffect(() => {
    setLoading(true);
    fetch(
      `https://sheets.googleapis.com/v4/spreadsheets/1ffqemZ-YOi7AvAw8HbxmMd0vIbsOXLZ7KpAmNQPD2r8/values/MP Round!A3:K22?majorDimension=COLUMNS&valueRenderOption=FORMULA&key=${process.env.NEXT_PUBLIC_GKEY}`,
      requestOptions
    )
      .then((res) => res.json())
      .then((data) => {
        setLeaderData(data.values);
        setLoading(false);
      });
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className="text-8xl font-extrabold py-3">toryBids</h1>

        {/* <p>{dummyData[0].id}</p> */}
        <ul className="grid grid-cols-2 gap-4">
          {dummyData.map((item) => (
            <li key={item.id}>
              {item.id},{item?.name}
            </li>
          ))}
        </ul>

        <div>
          {leaderData?.map((item) => (
            <li key={item.id} className="list-none">
              <p className="font-extrabold">{item[0]}</p>
            </li>
          ))}
        </div>
        {/* <p>{leaderData.values[0]}</p> */}
        {/* <p>{leaderData}</p> */}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
